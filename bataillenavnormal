#include<stdio.h>
#include<strings.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>

void delay(clock_t a)
{
    clock_t start;
    start  = clock();
    while(clock()-start<a)
    {

    }
}

int main()
{
    //A:Aircraft carrier
    //B:Battleship
    //D:Destroyer
    //C:Corvette

    int i,j,k=0,x,y,chk=0,win=0,uposa[5][2],uposb[4][2],uposd[3][2],uposc[2][2],a=0,b=0,c=0,d=0,probab,diff;
    char gridu[10][10],griduv[10][10],gridc[10][10],gridcv[10][10],orin[2],tempstr[10],str[20]="Battleship Game",ch;

    for(i=0;i<10;i++)
    {
        printf("\n");
    }

    for(i=0;i<30;i++)
    {
        printf(" ");
    }

    for(i=0;str[i]!='\0';i++)
    {
        printf("%c",str[i]);
        delay(60);
    }

    printf("\n");

    for(i=0;i<30;i++)
    {
        printf(" ");
    }

    delay(1500);
    system("cls");

    for(;;)
    {
        system("cls");

        for(i=0;i<10;i++)
            printf("\n");

        for(i=0;i<30;i++)
            printf(" ");
        printf("1.Play Battleship!\n");

        for(i=0;i<30;i++)
            printf(" ");
        printf("2.Rules\n");
        ch=getch();

        if(ch==49)
            break;

        if(ch==50)
        {
            system("cls");
            printf("1. Vous devez détruire les navires de guerre de votre adversaire avant qu'il ne détruise les vôtres.\n");
            printf("2. Le champ de bataille est une grille de 10x10 dans laquelle vous placez vos vaisseaux.\n");
            printf("3. Vous pouvez placer vos navires en indiquant leur orientation, c'est-à-dire horizontale ou verticale. Pour une orientation horizontale, tapez \"h\" dans l'option d'orientation et tapez \"v\" pour une orientation verticale.\n");
            printf("4. et ses coordonnées x y (séparées par un espace) où x est le numéro de ligne et y le numéro de colonne.\n");
            printf("5. Vous disposez d'une flotte de 4 navires de combat : un porte-avions (5 unités de long), un cuirassé (4 unités de long), un destroyer (3 unités de long) et une corvette (2 unités de long).\n");
            printf("6. Après avoir placé vos vaisseaux, vous pouvez attaquer la zone ennemie. Pour attaquer une zone, entrez ses coordonnées x y (séparées par un espace)\n");
            printf("7. L'attaque qui touche le navire ennemi est indiquée par un 'H' et vous obtenez un tour supplémentaire.\n");
            printf("7. Une attaque manquée est signalée par un '*' et votre tour est terminé.\n");
            printf("Appuyez sur ENTER pour continuer !");
            fflush(stdin);
            gets(tempstr);
            continue;
        }
    }

    system("cls");
    for(i=0;i<10;i++)
        printf("\n");
    for(i=0;i<30;i++)
        printf(" ");
    printf(" Sélectionnez le niveau de difficulté :\n");
    for(i=0;i<30;i++)
        printf(" ");
    printf("Amateur\n");
    for(i=0;i<30;i++)
        printf(" ");
    printf("Professionel\n");
    for(i=0;i<30;i++)
        printf(" ");
    printf("Légende\n");
    ch=getch();
    if(ch==49)
        diff=9;
    if(ch==50)
        diff=8;
    if(ch==51)
        diff=6;
    system("cls");
    for(i=0;i<10;i++)
    {
        for(j=0;j<10;j++)
        {
            gridc[i][j]='.';
            gridu[i][j]='.';
            gridcv[i][j]='.';
        }
    }

    for(i=0;i<10;i++)
    {
        for(j=0;j<30;j++)
            printf(" ");
        if(i==0)
        {
            printf("  ");
            for(j=0;j<10;j++)
                printf("%d ",j);
            printf("\n");
            for(j=0;j<30;j++)
                printf(" ");
        }
        printf("%d ",i);
        for(j=0;j<10;j++)
            printf("%c ",gridu[i][j]);
        printf("\n");
    }

    /*Aircraft carrier*/

    for(;;)
    {
        printf("Porte-avions :\n");
        printf("Orientation: ");
        scanf("%s",&orin);
        printf("coordonnées x et y : ");
        scanf("%d %d",&x,&y);
        if(strcmp(orin,"h")==0)
        {
            if(y>5 || y<0 || x>9 || x<0)
            {
                printf("Impossible de placer ici. ESSAYEZ DE NOUVEAU ! \n");
                continue;
            }
            else
            {
                for(i=y;i<y+5;i++)
                {
                    gridu[x][i]='A';
                    uposa[k][0]=x;
                    uposa[k][1]=i;
                    k++;
                }
                break;
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>5 || x<0 || y>9 || y<0)
            {
                printf(
                        "Impossible de placer ici. ESSAYEZ DE NOUVEAU !\n");
                continue;
            }
            else
            {
                for(i=x;i<x+5;i++)
                {
                    gridu[i][y]='A';
                    uposa[k][0]=i;
                    uposa[k][1]=y;
                    k++;
                }
                break;
            }
        }
    }
    k=0;
    system("cls");
    for(i=0;i<10;i++)
    {
        for(j=0;j<30;j++)
            printf(" ");
        if(i==0)
        {
            printf("  ");
            for(j=0;j<10;j++)
                printf("%d ",j);
            printf("\n");
            for(j=0;j<30;j++)
                printf(" ");
        }
        printf("%d ",i);
        for(j=0;j<10;j++)
            printf("%c ",gridu[i][j]);
        printf("\n");
    }

    /*B:Battleship*/

    for(;;)
    {
        chk=0;
        printf("Bataille Navale: \n");
        printf("Orientation: ");
        scanf("%s",&orin);
        printf("coordonnées x et y: ");
        scanf("%d %d",&x,&y);
        if(strcmp(orin,"h")==0)
        {
            if(y>6 || y<0 || x>9 || x<0)
            {
                printf("Impossible de placer ici. ESSAYEZ DE NOUVEAU !\n");
                continue;
            }
            else
            {

                for(i=y;i<y+4;i++)
                {
                    if(gridu[x][i]!='.')
                    {
                        printf("Impossible de placer ici. ESSAYEZ DE NOUVEAU !\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+4;i++)
                    {
                        gridu[x][i]='B';
                        uposb[k][0]=x;
                        uposb[k][1]=i;
                        k++;
                    }
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>6 || x<0 || y>9 || y<0)
            {
                printf("Impossible de placer ici. ESSAYEZ DE NOUVEAU !\n");
                continue;
            }
            else
            {
                for(i=x;i<x+4;i++)
                {
                    if(gridu[i][y]!='.')
                    {
                        printf("Impossible de placer ici. ESSAYEZ DE NOUVEAU !\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+4;i++)
                    {
                        gridu[i][y]='B';
                        uposb[k][0]=i;
                        uposb[k][1]=y;
                        k++;
                    }
                    break;
                }
            }
        }
    }
    k=0;
    system("cls");
    for(i=0;i<10;i++)
    {
        for(j=0;j<30;j++)
            printf(" ");
        if(i==0)
        {
            printf("  ");
            for(j=0;j<10;j++)
                printf("%d ",j);
            printf("\n");
            for(j=0;j<30;j++)
                printf(" ");
        }
        printf("%d ",i);
        for(j=0;j<10;j++)
            printf("%c ",gridu[i][j]);
        printf("\n");
    }

    /*Destroyer*/
    for(;;)
    {
        chk=0;
        printf("Destructeur :\n");
        printf("Orientation: ");
        scanf("%s",&orin);
        printf("x and y coordinates: ");
        scanf("%d %d",&x,&y);
        if(strcmp(orin,"h")==0)
        {
            if(y>7 || y<0 || x>9 || x<0)
            {
                printf("Can't place here. TRY AGAIN!\n");
                continue;
            }
            else
            {
                for(i=y;i<y+3;i++)
                {
                    if(gridu[x][i]!='.')
                    {
                        printf("Can't place here. TRY AGAIN!\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+3;i++)
                    {
                        gridu[x][i]='D';
                        uposd[k][0]=x;
                        uposd[k][1]=i;
                        k++;
                    }
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>7 || x<0 || y>9 || y<0)
            {
                printf("Can't place here. TRY AGAIN!\n");
                continue;
            }
            else
            {
                for(i=x;i<x+3;i++)
                {
                    if(gridu[i][y]!='.')
                    {
                        printf("Can't place here. TRY AGAIN!\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+3;i++)
                    {
                        gridu[i][y]='D';
                        uposd[k][0]=i;
                        uposd[k][1]=y;
                        k++;
                    }
                    break;
                }
            }
        }
    }
    k=0;
    system("cls");
    for(i=0;i<10;i++)
    {
        for(j=0;j<30;j++)
            printf(" ");
        if(i==0)
        {
            printf("  ");
            for(j=0;j<10;j++)
                printf("%d ",j);
            printf("\n");
            for(j=0;j<30;j++)
                printf(" ");
        }
        printf("%d ",i);
        for(j=0;j<10;j++)
            printf("%c ",gridu[i][j]);
        printf("\n");
    }

    /*Corvette*/

    for(;;)
    {
        chk=0;
        printf("Corvette:\n");
        printf("Orientation: ");
        scanf("%s",&orin);
        printf("x and y coordinates: ");
        scanf("%d %d",&x,&y);
        if(strcmp(orin,"h")==0)
        {
            if(y>8 || y<0 || x>9 || x<0)
            {
                printf("Can't place here. TRY AGAIN!\n");
                continue;
            }
            else
            {
                for(i=y;i<y+2;i++)
                {
                    if(gridu[x][i]!='.')
                    {
                        printf("Can't place here. TRY AGAIN!\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+2;i++)
                    {
                        gridu[x][i]='C';
                        uposc[k][0]=x;
                        uposc[k][1]=i;
                        k++;
                    }
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>8 || x<0 || y>9 || y<0)
            {
                printf("Can't place here. TRY AGAIN!\n");
                continue;
            }
            else
            {
                for(i=x;i<x+2;i++)
                {
                    if(gridu[i][y]!='.')
                    {
                        printf("Can't place here. TRY AGAIN!\n");
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+2;i++)
                    {
                        gridu[i][y]='C';
                        uposc[k][0]=i;
                        uposc[k][1]=y;
                        k++;
                    }
                    break;
                }
            }
        }
    }
    system("cls");
    for(i=0;i<10;i++)
    {
        for(j=0;j<30;j++)
            printf(" ");
        if(i==0)
        {
            printf("  ");
            for(j=0;j<10;j++)
                printf("%d ",j);
            printf("\n");
            for(j=0;j<30;j++)
                printf(" ");
        }
        printf("%d ",i);
        for(j=0;j<10;j++)
            printf("%c ",gridu[i][j]);
        printf("\n");
    }
    printf("Press ENTER to continue!");
    fflush(stdin);
    gets(tempstr);
    srand(time(NULL));

    /*Aircraft carrier CPU*/

    for(;;)
    {
        if(rand()%2 == 1)
            strcpy(orin,"h");
        else strcpy(orin,"v");
        x=rand()%10;
        y=rand()%10;
        if(strcmp(orin,"h")==0)
        {
            if(y>5 || y<0 || x>9 || x<0)
            {
                continue;
            }
            else
            {
                for(i=y;i<y+5;i++)
                    gridc[x][i]='A';
                break;
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>5 || x<0 || y>9 || y<0)
            {
                continue;
            }
            else
            {
                for(i=x;i<x+5;i++)
                    gridc[i][y]='A';
                break;
            }
        }
    }

    /*Battleship CPU*/

    for(;;)
    {
        chk=0;
        if(rand()%2 == 1)
            strcpy(orin,"h");
        else strcpy(orin,"v");
        x=rand()%10;
        y=rand()%10;
        if(strcmp(orin,"h")==0)
        {
            if(y>6 || y<0 || x>9 || x<0)
                continue;
            else
            {
                for(i=y;i<y+4;i++)
                {
                    if(gridc[x][i]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+4;i++)
                        gridc[x][i]='B';
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>6 || x<0 || y>9 || y<0)
            {
                continue;
            }
            else
            {
                for(i=x;i<x+4;i++)
                {
                    if(gridc[i][y]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+4;i++)
                        gridc[i][y]='B';
                    break;
                }
            }
        }
    }

    /*Destroyer CPU*/

    for(;;)
    {
        chk=0;
        if(rand()%2 == 1)
            strcpy(orin,"h");
        else strcpy(orin,"v");
        x=rand()%10;
        y=rand()%10;
        if(strcmp(orin,"h")==0)
        {
            if(y>7 || y<0 || x>9 || x<0)
            {
                continue;
            }
            else
            {
                for(i=y;i<y+3;i++)
                {
                    if(gridc[x][i]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+3;i++)
                        gridc[x][i]='D';
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>7 || x<0 || y>9 || y<0)
            {
                continue;
            }
            else
            {
                for(i=x;i<x+3;i++)
                {
                    if(gridc[i][y]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+3;i++)
                        gridc[i][y]='D';
                    break;
                }
            }
        }
    }

    /*Corvette CPU*/

    for(;;)
    {
        chk=0;
        if(rand()%2 == 1)
            strcpy(orin,"h");
        else strcpy(orin,"v");
        x=rand()%10;
        y=rand()%10;
        if(strcmp(orin,"h")==0)
        {
            if(y>8 || y<0 || x>9 || x<0)
            {
                continue;
            }
            else
            {
                for(i=y;i<y+2;i++)
                {
                    if(gridc[x][i]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=y;i<y+2;i++)
                        gridc[x][i]='C';
                    break;
                }
            }
        }
        if(strcmp(orin,"v")==0)
        {
            if(x>8 || x<0 || y>9 || y<0)
            {
                continue;
            }
            else
            {
                for(i=x;i<x+2;i++)
                {
                    if(gridc[i][y]!='.')
                    {
                        chk=1;
                        break;
                    }
                }
                if(chk==1)
                    continue;
                else
                {
                    for(i=x;i<x+2;i++)
                        gridc[i][y]='C';
                    break;
                }
            }
        }
    }

    for(i=0;i<10;i++)
    {
        for(j=0;j<10;j++)
            griduv[i][j]=gridu[i][j];
    }
    for(;;)
    {
        system("cls");
        for(i=0;i<10;i++)
        {
            for(j=0;j<30;j++)
                printf(" ");
            if(i==0)
            {
                printf("  ");
                for(j=0;j<10;j++)
                    printf("%d ",j);
                printf("\n");
                for(j=0;j<30;j++)
                    printf(" ");
            }
            printf("%d ",i);
            for(j=0;j<10;j++)
                printf("%c ",gridcv[i][j]);
            printf("\n");
        }
        printf("\n");
        for(i=0;i<10;i++)
        {
            for(j=0;j<30;j++)
                printf(" ");
            if(i==0)
            {
                printf("  ");
                for(j=0;j<10;j++)
                    printf("%d ",j);
                printf("\n");
                for(j=0;j<30;j++)
                    printf(" ");
            }
            printf("%d ",i);
            for(j=0;j<10;j++)
                printf("%c ",griduv[i][j]);
            printf("\n");
        }

        for(;;)
        {
            printf("Enter x and y: ");
            scanf("%d %d", &x,&y);
            if(x>9 || x<0 || y>9 || y<0 || gridcv[x][y]=='H' || gridcv[x][y]=='*')
            {
                printf("Invalid Input. TRY AGAIN!\n");
                continue;
            }
            else
            {
                if(gridc[x][y]=='A' || gridc[x][y]=='B'||gridc[x][y]=='C'||gridc[x][y]=='D')
                {
                    if(gridcv[x][y]!='H')
                    {
                        gridcv[x][y]='H';
                        system("cls");
                        for(i=0;i<10;i++)
                        {
                            for(j=0;j<30;j++)
                                printf(" ");
                            if(i==0)
                            {
                                printf("  ");
                                for(j=0;j<10;j++)
                                    printf("%d ",j);
                                printf("\n");
                                for(j=0;j<30;j++)
                                    printf(" ");
                            }
                            printf("%d ",i);
                            for(j=0;j<10;j++)
                                printf("%c ",gridcv[i][j]);
                            printf("\n");
                        }
                        printf("\n");
                        for(i=0;i<10;i++)
                        {
                            for(j=0;j<30;j++)
                                printf(" ");
                            if(i==0)
                            {
                                printf("  ");
                                for(j=0;j<10;j++)
                                    printf("%d ",j);
                                printf("\n");
                                for(j=0;j<30;j++)
                                    printf(" ");
                            }
                            printf("%d ",i);
                            for(j=0;j<10;j++)
                                printf("%c ",griduv[i][j]);
                            printf("\n");
                        }
                        for(i=0;i<10;i++)
                        {
                            for(j=0;j<10;j++)
                            {
                                if(gridcv[i][j]=='H')
                                    win++;
                            }
                        }
                        if(win==14)
                        {
                            printf("\nYou win!\n");
                            break;
                        }
                        win=0;
                        continue;
                    }
                    else
                    {
                        printf("Invalid Input. TRY AGAIN!\n");
                        continue;
                    }
                }
                else
                {
                    gridcv[x][y]='*';
                    break;
                }
            }
        }

        for(;;)
        {
            probab=rand()%diff;
            if(probab==diff-3&& a<5)
            {
                x=uposa[a][0];
                y=uposa[a][1];
                a++;
            }
            else if(probab==diff-2 && b<4)
            {
                x=uposb[b][0];
                y=uposb[b][1];
                b++;
            }
            else if(probab==diff-5 && d<3)
            {
                x=uposd[d][0];
                y=uposd[d][1];
                d++;
            }
            else if(probab==diff-6 && c<2)
            {
                x=uposc[c][0];
                y=uposc[c][1];
                c++;
            }
            else
            {
                x=rand()%10;
                y=rand()%10;
            }
            if(x>9 || x<0 || y>9 || y<0 || griduv[x][y]=='H' || griduv[x][y]=='*')
            {
                continue;
            }
            else
            {
                if(gridu[x][y]=='A' || gridu[x][y]=='B'||gridu[x][y]=='C'||gridu[x][y]=='D')
                {
                    if(griduv[x][y]!='H')
                    {
                        griduv[x][y]='H';
                        system("cls");
                        for(i=0;i<10;i++)
                        {
                            for(j=0;j<30;j++)
                                printf(" ");
                            if(i==0)
                            {
                                printf("  ");
                                for(j=0;j<10;j++)
                                    printf("%d ",j);
                                printf("\n");
                                for(j=0;j<30;j++)
                                    printf(" ");
                            }
                            printf("%d ",i);
                            for(j=0;j<10;j++)
                                printf("%c ",gridcv[i][j]);
                            printf("\n");
                        }
                        printf("\n");
                        for(i=0;i<10;i++)
                        {
                            for(j=0;j<30;j++)
                                printf(" ");
                            if(i==0)
                            {
                                printf("  ");
                                for(j=0;j<10;j++)
                                    printf("%d ",j);
                                printf("\n");
                                for(j=0;j<30;j++)
                                    printf(" ");
                            }
                            printf("%d ",i);
                            for(j=0;j<10;j++)
                                printf("%c ",griduv[i][j]);
                            printf("\n");
                        }
                        delay(1000);
                        continue;
                    }
                    else
                    {
                        continue;
                    }
                }
                else
                {
                    griduv[x][y]='*';
                    break;
                }
            }

        }

        for(i=0;i<10;i++)
        {
            for(j=0;j<10;j++)
            {
                if(gridcv[i][j]=='H')
                    win++;
            }
        }

        if(win==14)
        {
            printf("\n You WIN!\n");
            break;
        }
        win=0;

        for(i=0;i<10;i++)
        {
            for(j=0;j<10;j++)
            {
                if(griduv[i][j]=='H')
                    win++;
            }
        }

        if(win==14)
        {
            printf("\n You LOSE!\n");
            break;
        }
        win=0;
    }
    return 0;
}

